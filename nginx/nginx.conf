# worker_processes 1;

# events { worker_connections 1024; }

# http {
#   include       mime.types;
#   default_type  application/json;

#   sendfile        on;
#   keepalive_timeout  65;

#   server {
#     listen 80;

#     location /api/auth/ {
#       proxy_pass http://host.docker.internal:5001/;
#     }

#     location /api/project/ {
#      proxy_pass http://host.docker.internal:5002/;
#     }

#     location / {
#       return 404 '{"message": "Not Found"}';
#       add_header Content-Type application/json;
#     }
#   }
# }




# worker_processes 1;

# events { worker_connections 1024; }

# http {
#   include       mime.types;
#   default_type  application/json;

#   sendfile        on;
#   keepalive_timeout  65;

#   server {
#     listen 80;

#     location /api/auth/ {
#       proxy_pass http://auth-service:5001/api/auth/;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }

#     location /api/project/ {
#       proxy_pass http://project-service:5002/api/project/;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }

#      location /api/like/ {
#       proxy_pass http://like-service:5003/api/like/;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }

#     location / {
#       return 404 '{"message": "Not Found"}';
#       add_header Content-Type application/json;
#     }
#   }
# }



 worker_processes 1;

events { worker_connections 1024; }

http {
  include       mime.types;
  default_type  application/json;

  sendfile        on;
  keepalive_timeout  65;

  server {
    listen 80;

    location /api/auth/ {
      proxy_pass http://auth-service:5001/api/auth/;
    }

    location /api/project/ {
     proxy_pass http://project-service:5002/api/project/;
    }

    
     location /api/like/ {
      proxy_pass http://like-service:5003/api/like/;
    }

    location / {
      return 404 '{"message": "Not Found"}';
      add_header Content-Type application/json;
    }
  }
}